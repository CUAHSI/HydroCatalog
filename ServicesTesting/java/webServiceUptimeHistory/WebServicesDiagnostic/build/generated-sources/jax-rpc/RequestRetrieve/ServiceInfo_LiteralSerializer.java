// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package RequestRetrieve;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.xsd.XSDConstants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.util.List;
import java.util.ArrayList;

public class ServiceInfo_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable  {
    private static final javax.xml.namespace.QName ns1_servURL_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "servURL");
    private static final javax.xml.namespace.QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns2_myns2_string__java_lang_String_String_Serializer;
    private static final javax.xml.namespace.QName ns1_Title_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "Title");
    private static final javax.xml.namespace.QName ns1_ServiceDescriptionURL_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "ServiceDescriptionURL");
    private static final javax.xml.namespace.QName ns1_name_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "name");
    private static final javax.xml.namespace.QName ns1_Email_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "Email");
    private static final javax.xml.namespace.QName ns1_phone_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "phone");
    private static final javax.xml.namespace.QName ns1_organization_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "organization");
    private static final javax.xml.namespace.QName ns1_orgwebsite_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "orgwebsite");
    private static final javax.xml.namespace.QName ns1_citation_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "citation");
    private static final javax.xml.namespace.QName ns1_aabstract_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "aabstract");
    private static final javax.xml.namespace.QName ns1_valuecount_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "valuecount");
    private static final javax.xml.namespace.QName ns2_int_TYPE_QNAME = SchemaConstants.QNAME_TYPE_INT;
    private CombinedSerializer ns2_myns2__int__int_Int_Serializer;
    private static final javax.xml.namespace.QName ns1_variablecount_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "variablecount");
    private static final javax.xml.namespace.QName ns1_sitecount_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "sitecount");
    private static final javax.xml.namespace.QName ns1_ServiceID_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "ServiceID");
    private static final javax.xml.namespace.QName ns1_NetworkName_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "NetworkName");
    private static final javax.xml.namespace.QName ns1_minx_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "minx");
    private static final javax.xml.namespace.QName ns2_double_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DOUBLE;
    private CombinedSerializer ns2_myns2__double__double_Double_Serializer;
    private static final javax.xml.namespace.QName ns1_miny_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "miny");
    private static final javax.xml.namespace.QName ns1_maxx_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "maxx");
    private static final javax.xml.namespace.QName ns1_maxy_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "maxy");
    private static final javax.xml.namespace.QName ns1_serviceStatus_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "serviceStatus");
    
    public ServiceInfo_LiteralSerializer(javax.xml.namespace.QName type, java.lang.String encodingStyle) {
        this(type, encodingStyle, false);
    }
    
    public ServiceInfo_LiteralSerializer(javax.xml.namespace.QName type, java.lang.String encodingStyle, boolean encodeType) {
        super(type, true, encodingStyle, encodeType);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns2_myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.String.class, ns2_string_TYPE_QNAME);
        ns2_myns2__int__int_Int_Serializer = (CombinedSerializer)registry.getSerializer("", int.class, ns2_int_TYPE_QNAME);
        ns2_myns2__double__double_Double_Serializer = (CombinedSerializer)registry.getSerializer("", double.class, ns2_double_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws java.lang.Exception {
        RequestRetrieve.ServiceInfo instance = new RequestRetrieve.ServiceInfo();
        java.lang.Object member=null;
        javax.xml.namespace.QName elementName;
        java.util.List values;
        java.lang.Object value;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_servURL_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_servURL_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setServURL((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_Title_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Title_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setTitle((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ServiceDescriptionURL_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ServiceDescriptionURL_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setServiceDescriptionURL((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_name_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_name_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setName((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_Email_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Email_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setEmail((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_phone_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_phone_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setPhone((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_organization_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_organization_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setOrganization((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_orgwebsite_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_orgwebsite_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setOrgwebsite((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_citation_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_citation_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setCitation((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_aabstract_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_aabstract_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setAabstract((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_valuecount_QNAME)) {
                member = ns2_myns2__int__int_Int_Serializer.deserialize(ns1_valuecount_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setValuecount(((java.lang.Integer)member).intValue());
                reader.nextElementContent();
            } else {
                throw new DeserializationException("literal.unexpectedElementName", new Object[] { ns1_valuecount_QNAME, reader.getName() });
            }
        }
        else {
            throw new DeserializationException("literal.expectedElementName", reader.getName().toString());
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_variablecount_QNAME)) {
                member = ns2_myns2__int__int_Int_Serializer.deserialize(ns1_variablecount_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setVariablecount(((java.lang.Integer)member).intValue());
                reader.nextElementContent();
            } else {
                throw new DeserializationException("literal.unexpectedElementName", new Object[] { ns1_variablecount_QNAME, reader.getName() });
            }
        }
        else {
            throw new DeserializationException("literal.expectedElementName", reader.getName().toString());
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_sitecount_QNAME)) {
                member = ns2_myns2__int__int_Int_Serializer.deserialize(ns1_sitecount_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setSitecount(((java.lang.Integer)member).intValue());
                reader.nextElementContent();
            } else {
                throw new DeserializationException("literal.unexpectedElementName", new Object[] { ns1_sitecount_QNAME, reader.getName() });
            }
        }
        else {
            throw new DeserializationException("literal.expectedElementName", reader.getName().toString());
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ServiceID_QNAME)) {
                member = ns2_myns2__int__int_Int_Serializer.deserialize(ns1_ServiceID_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setServiceID(((java.lang.Integer)member).intValue());
                reader.nextElementContent();
            } else {
                throw new DeserializationException("literal.unexpectedElementName", new Object[] { ns1_ServiceID_QNAME, reader.getName() });
            }
        }
        else {
            throw new DeserializationException("literal.expectedElementName", reader.getName().toString());
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_NetworkName_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_NetworkName_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setNetworkName((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_minx_QNAME)) {
                member = ns2_myns2__double__double_Double_Serializer.deserialize(ns1_minx_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setMinx(((Double)member).doubleValue());
                reader.nextElementContent();
            } else {
                throw new DeserializationException("literal.unexpectedElementName", new Object[] { ns1_minx_QNAME, reader.getName() });
            }
        }
        else {
            throw new DeserializationException("literal.expectedElementName", reader.getName().toString());
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_miny_QNAME)) {
                member = ns2_myns2__double__double_Double_Serializer.deserialize(ns1_miny_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setMiny(((Double)member).doubleValue());
                reader.nextElementContent();
            } else {
                throw new DeserializationException("literal.unexpectedElementName", new Object[] { ns1_miny_QNAME, reader.getName() });
            }
        }
        else {
            throw new DeserializationException("literal.expectedElementName", reader.getName().toString());
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_maxx_QNAME)) {
                member = ns2_myns2__double__double_Double_Serializer.deserialize(ns1_maxx_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setMaxx(((Double)member).doubleValue());
                reader.nextElementContent();
            } else {
                throw new DeserializationException("literal.unexpectedElementName", new Object[] { ns1_maxx_QNAME, reader.getName() });
            }
        }
        else {
            throw new DeserializationException("literal.expectedElementName", reader.getName().toString());
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_maxy_QNAME)) {
                member = ns2_myns2__double__double_Double_Serializer.deserialize(ns1_maxy_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setMaxy(((Double)member).doubleValue());
                reader.nextElementContent();
            } else {
                throw new DeserializationException("literal.unexpectedElementName", new Object[] { ns1_maxy_QNAME, reader.getName() });
            }
        }
        else {
            throw new DeserializationException("literal.expectedElementName", reader.getName().toString());
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_serviceStatus_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_serviceStatus_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setServiceStatus((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (java.lang.Object)instance;
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        RequestRetrieve.ServiceInfo instance = (RequestRetrieve.ServiceInfo)obj;
        
    }
    public void doSerialize(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        RequestRetrieve.ServiceInfo instance = (RequestRetrieve.ServiceInfo)obj;
        
        if (instance.getServURL() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getServURL(), ns1_servURL_QNAME, null, writer, context);
        }
        if (instance.getTitle() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getTitle(), ns1_Title_QNAME, null, writer, context);
        }
        if (instance.getServiceDescriptionURL() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getServiceDescriptionURL(), ns1_ServiceDescriptionURL_QNAME, null, writer, context);
        }
        if (instance.getName() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getName(), ns1_name_QNAME, null, writer, context);
        }
        if (instance.getEmail() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getEmail(), ns1_Email_QNAME, null, writer, context);
        }
        if (instance.getPhone() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getPhone(), ns1_phone_QNAME, null, writer, context);
        }
        if (instance.getOrganization() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getOrganization(), ns1_organization_QNAME, null, writer, context);
        }
        if (instance.getOrgwebsite() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getOrgwebsite(), ns1_orgwebsite_QNAME, null, writer, context);
        }
        if (instance.getCitation() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getCitation(), ns1_citation_QNAME, null, writer, context);
        }
        if (instance.getAabstract() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getAabstract(), ns1_aabstract_QNAME, null, writer, context);
        }
        if (new java.lang.Integer(instance.getValuecount()) == null) {
            throw new SerializationException("literal.unexpectedNull");
        }
        ns2_myns2__int__int_Int_Serializer.serialize(new java.lang.Integer(instance.getValuecount()), ns1_valuecount_QNAME, null, writer, context);
        if (new java.lang.Integer(instance.getVariablecount()) == null) {
            throw new SerializationException("literal.unexpectedNull");
        }
        ns2_myns2__int__int_Int_Serializer.serialize(new java.lang.Integer(instance.getVariablecount()), ns1_variablecount_QNAME, null, writer, context);
        if (new java.lang.Integer(instance.getSitecount()) == null) {
            throw new SerializationException("literal.unexpectedNull");
        }
        ns2_myns2__int__int_Int_Serializer.serialize(new java.lang.Integer(instance.getSitecount()), ns1_sitecount_QNAME, null, writer, context);
        if (new java.lang.Integer(instance.getServiceID()) == null) {
            throw new SerializationException("literal.unexpectedNull");
        }
        ns2_myns2__int__int_Int_Serializer.serialize(new java.lang.Integer(instance.getServiceID()), ns1_ServiceID_QNAME, null, writer, context);
        if (instance.getNetworkName() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getNetworkName(), ns1_NetworkName_QNAME, null, writer, context);
        }
        if (new Double(instance.getMinx()) == null) {
            throw new SerializationException("literal.unexpectedNull");
        }
        ns2_myns2__double__double_Double_Serializer.serialize(new Double(instance.getMinx()), ns1_minx_QNAME, null, writer, context);
        if (new Double(instance.getMiny()) == null) {
            throw new SerializationException("literal.unexpectedNull");
        }
        ns2_myns2__double__double_Double_Serializer.serialize(new Double(instance.getMiny()), ns1_miny_QNAME, null, writer, context);
        if (new Double(instance.getMaxx()) == null) {
            throw new SerializationException("literal.unexpectedNull");
        }
        ns2_myns2__double__double_Double_Serializer.serialize(new Double(instance.getMaxx()), ns1_maxx_QNAME, null, writer, context);
        if (new Double(instance.getMaxy()) == null) {
            throw new SerializationException("literal.unexpectedNull");
        }
        ns2_myns2__double__double_Double_Serializer.serialize(new Double(instance.getMaxy()), ns1_maxy_QNAME, null, writer, context);
        if (instance.getServiceStatus() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getServiceStatus(), ns1_serviceStatus_QNAME, null, writer, context);
        }
    }
}
