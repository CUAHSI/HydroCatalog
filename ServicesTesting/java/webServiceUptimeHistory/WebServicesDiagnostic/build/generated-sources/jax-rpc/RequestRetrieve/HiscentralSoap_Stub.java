// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package RequestRetrieve;

import com.sun.xml.rpc.server.http.MessageContextProperties;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.soap.SOAPEncodingConstants;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import java.lang.Class;
import com.sun.xml.rpc.client.SenderException;
import com.sun.xml.rpc.client.*;
import com.sun.xml.rpc.client.http.*;
import javax.xml.rpc.handler.*;
import javax.xml.rpc.JAXRPCException;
import javax.xml.rpc.soap.SOAPFaultException;

public class HiscentralSoap_Stub
    extends com.sun.xml.rpc.client.StubBase
    implements RequestRetrieve.HiscentralSoap {
    
    
    
    /*
     *  public constructor
     */
    public HiscentralSoap_Stub(HandlerChain handlerChain) {
        super(handlerChain);
        _setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://hiscentral.cuahsi.org/webservices/hiscentral.asmx");
    }
    
    
    /*
     *  implementation of getOntologyTree
     */
    public RequestRetrieve.OntologyNode getOntologyTree(java.lang.String conceptKeyword)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(getOntologyTree_OPCODE);
            
            RequestRetrieve.GetOntologyTree _myGetOntologyTree = new RequestRetrieve.GetOntologyTree();
            _myGetOntologyTree.setConceptKeyword(conceptKeyword);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_getOntologyTree_getOntologyTree_QNAME);
            _bodyBlock.setValue(_myGetOntologyTree);
            _bodyBlock.setSerializer(ns1_myGetOntologyTree_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "http://hiscentral.cuahsi.org/20100205/getOntologyTree");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            RequestRetrieve.GetOntologyTreeResponse _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (RequestRetrieve.GetOntologyTreeResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (RequestRetrieve.GetOntologyTreeResponse)_responseObj;
            }
            
            return _result.getGetOntologyTreeResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getSitesInBox
     */
    public RequestRetrieve.ArrayOfSite getSitesInBox(RequestRetrieve.Box box, java.lang.String conceptKeyword, RequestRetrieve.ArrayOfInt networkIDs)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetSitesInBox_OPCODE);
            
            RequestRetrieve.GetSitesInBox _myGetSitesInBox = new RequestRetrieve.GetSitesInBox();
            _myGetSitesInBox.setBox(box);
            _myGetSitesInBox.setConceptKeyword(conceptKeyword);
            _myGetSitesInBox.setNetworkIDs(networkIDs);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetSitesInBox_GetSitesInBox_QNAME);
            _bodyBlock.setValue(_myGetSitesInBox);
            _bodyBlock.setSerializer(ns1_myGetSitesInBox_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "http://hiscentral.cuahsi.org/20100205/GetSitesInBox");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            RequestRetrieve.GetSitesInBoxResponse _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (RequestRetrieve.GetSitesInBoxResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (RequestRetrieve.GetSitesInBoxResponse)_responseObj;
            }
            
            return _result.getGetSitesInBoxResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getMappedVariables2
     */
    public RequestRetrieve.ArrayOfMappedVariable getMappedVariables2(java.lang.String conceptids, java.lang.String networkids)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetMappedVariables2_OPCODE);
            
            RequestRetrieve.GetMappedVariables2 _myGetMappedVariables2 = new RequestRetrieve.GetMappedVariables2();
            _myGetMappedVariables2.setConceptids(conceptids);
            _myGetMappedVariables2.setNetworkids(networkids);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetMappedVariables2_GetMappedVariables2_QNAME);
            _bodyBlock.setValue(_myGetMappedVariables2);
            _bodyBlock.setSerializer(ns1_myGetMappedVariables2_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "http://hiscentral.cuahsi.org/20100205/GetMappedVariables2");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            RequestRetrieve.GetMappedVariables2Response _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (RequestRetrieve.GetMappedVariables2Response)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (RequestRetrieve.GetMappedVariables2Response)_responseObj;
            }
            
            return _result.getGetMappedVariables2Result();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getWordList
     */
    public RequestRetrieve.ArrayOfString getWordList(java.lang.String prefixText, int count)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetWordList_OPCODE);
            
            RequestRetrieve.GetWordList _myGetWordList = new RequestRetrieve.GetWordList();
            _myGetWordList.setPrefixText(prefixText);
            _myGetWordList.setCount(count);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetWordList_GetWordList_QNAME);
            _bodyBlock.setValue(_myGetWordList);
            _bodyBlock.setSerializer(ns1_myGetWordList_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "http://hiscentral.cuahsi.org/20100205/GetWordList");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            RequestRetrieve.GetWordListResponse _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (RequestRetrieve.GetWordListResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (RequestRetrieve.GetWordListResponse)_responseObj;
            }
            
            return _result.getGetWordListResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getSitesInBox2
     */
    public RequestRetrieve.ArrayOfSite getSitesInBox2(double xmin, double xmax, double ymin, double ymax, java.lang.String conceptKeyword, java.lang.String networkIDs)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetSitesInBox2_OPCODE);
            
            RequestRetrieve.GetSitesInBox2 _myGetSitesInBox2 = new RequestRetrieve.GetSitesInBox2();
            _myGetSitesInBox2.setXmin(xmin);
            _myGetSitesInBox2.setXmax(xmax);
            _myGetSitesInBox2.setYmin(ymin);
            _myGetSitesInBox2.setYmax(ymax);
            _myGetSitesInBox2.setConceptKeyword(conceptKeyword);
            _myGetSitesInBox2.setNetworkIDs(networkIDs);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetSitesInBox2_GetSitesInBox2_QNAME);
            _bodyBlock.setValue(_myGetSitesInBox2);
            _bodyBlock.setSerializer(ns1_myGetSitesInBox2_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "http://hiscentral.cuahsi.org/20100205/GetSitesInBox2");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            RequestRetrieve.GetSitesInBox2Response _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (RequestRetrieve.GetSitesInBox2Response)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (RequestRetrieve.GetSitesInBox2Response)_responseObj;
            }
            
            return _result.getGetSitesInBox2Result();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getSeriesCatalogForBox
     */
    public RequestRetrieve.ArrayOfSeriesRecord getSeriesCatalogForBox(RequestRetrieve.Box box, java.lang.String conceptCode, RequestRetrieve.ArrayOfInt networkIDs, java.lang.String beginDate, java.lang.String endDate)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetSeriesCatalogForBox_OPCODE);
            
            RequestRetrieve.GetSeriesCatalogForBox _myGetSeriesCatalogForBox = new RequestRetrieve.GetSeriesCatalogForBox();
            _myGetSeriesCatalogForBox.setBox(box);
            _myGetSeriesCatalogForBox.setConceptCode(conceptCode);
            _myGetSeriesCatalogForBox.setNetworkIDs(networkIDs);
            _myGetSeriesCatalogForBox.setBeginDate(beginDate);
            _myGetSeriesCatalogForBox.setEndDate(endDate);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetSeriesCatalogForBox_GetSeriesCatalogForBox_QNAME);
            _bodyBlock.setValue(_myGetSeriesCatalogForBox);
            _bodyBlock.setSerializer(ns1_myGetSeriesCatalogForBox_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "http://hiscentral.cuahsi.org/20100205/GetSeriesCatalogForBox");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            RequestRetrieve.GetSeriesCatalogForBoxResponse _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (RequestRetrieve.GetSeriesCatalogForBoxResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (RequestRetrieve.GetSeriesCatalogForBoxResponse)_responseObj;
            }
            
            return _result.getGetSeriesCatalogForBoxResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getWaterOneFlowServiceInfo
     */
    public RequestRetrieve.ArrayOfServiceInfo getWaterOneFlowServiceInfo()
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetWaterOneFlowServiceInfo_OPCODE);
            
            RequestRetrieve.GetWaterOneFlowServiceInfo _myGetWaterOneFlowServiceInfo = new RequestRetrieve.GetWaterOneFlowServiceInfo();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetWaterOneFlowServiceInfo_GetWaterOneFlowServiceInfo_QNAME);
            _bodyBlock.setValue(_myGetWaterOneFlowServiceInfo);
            _bodyBlock.setSerializer(ns1_myGetWaterOneFlowServiceInfo_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "http://hiscentral.cuahsi.org/20100205/GetWaterOneFlowServiceInfo");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            RequestRetrieve.GetWaterOneFlowServiceInfoResponse _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (RequestRetrieve.GetWaterOneFlowServiceInfoResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (RequestRetrieve.GetWaterOneFlowServiceInfoResponse)_responseObj;
            }
            
            return _result.getGetWaterOneFlowServiceInfoResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getSeriesCatalogForBox2
     */
    public RequestRetrieve.ArrayOfSeriesRecord getSeriesCatalogForBox2(double xmin, double xmax, double ymin, double ymax, java.lang.String conceptKeyword, java.lang.String networkIDs, java.lang.String beginDate, java.lang.String endDate)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetSeriesCatalogForBox2_OPCODE);
            
            RequestRetrieve.GetSeriesCatalogForBox2 _myGetSeriesCatalogForBox2 = new RequestRetrieve.GetSeriesCatalogForBox2();
            _myGetSeriesCatalogForBox2.setXmin(xmin);
            _myGetSeriesCatalogForBox2.setXmax(xmax);
            _myGetSeriesCatalogForBox2.setYmin(ymin);
            _myGetSeriesCatalogForBox2.setYmax(ymax);
            _myGetSeriesCatalogForBox2.setConceptKeyword(conceptKeyword);
            _myGetSeriesCatalogForBox2.setNetworkIDs(networkIDs);
            _myGetSeriesCatalogForBox2.setBeginDate(beginDate);
            _myGetSeriesCatalogForBox2.setEndDate(endDate);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetSeriesCatalogForBox2_GetSeriesCatalogForBox2_QNAME);
            _bodyBlock.setValue(_myGetSeriesCatalogForBox2);
            _bodyBlock.setSerializer(ns1_myGetSeriesCatalogForBox2_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "http://hiscentral.cuahsi.org/20100205/GetSeriesCatalogForBox2");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            RequestRetrieve.GetSeriesCatalogForBox2Response _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (RequestRetrieve.GetSeriesCatalogForBox2Response)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (RequestRetrieve.GetSeriesCatalogForBox2Response)_responseObj;
            }
            
            return _result.getGetSeriesCatalogForBox2Result();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getSearchableConcepts
     */
    public RequestRetrieve.ArrayOfString getSearchableConcepts()
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetSearchableConcepts_OPCODE);
            
            RequestRetrieve.GetSearchableConcepts _myGetSearchableConcepts = new RequestRetrieve.GetSearchableConcepts();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetSearchableConcepts_GetSearchableConcepts_QNAME);
            _bodyBlock.setValue(_myGetSearchableConcepts);
            _bodyBlock.setSerializer(ns1_myGetSearchableConcepts_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "http://hiscentral.cuahsi.org/20100205/GetSearchableConcepts");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            RequestRetrieve.GetSearchableConceptsResponse _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (RequestRetrieve.GetSearchableConceptsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (RequestRetrieve.GetSearchableConceptsResponse)_responseObj;
            }
            
            return _result.getGetSearchableConceptsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getMappedVariables
     */
    public RequestRetrieve.ArrayOfMappedVariable getMappedVariables(RequestRetrieve.ArrayOfString conceptids, RequestRetrieve.ArrayOfString networkids)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetMappedVariables_OPCODE);
            
            RequestRetrieve.GetMappedVariables _myGetMappedVariables = new RequestRetrieve.GetMappedVariables();
            _myGetMappedVariables.setConceptids(conceptids);
            _myGetMappedVariables.setNetworkids(networkids);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetMappedVariables_GetMappedVariables_QNAME);
            _bodyBlock.setValue(_myGetMappedVariables);
            _bodyBlock.setSerializer(ns1_myGetMappedVariables_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "http://hiscentral.cuahsi.org/20100205/GetMappedVariables");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            RequestRetrieve.GetMappedVariablesResponse _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (RequestRetrieve.GetMappedVariablesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (RequestRetrieve.GetMappedVariablesResponse)_responseObj;
            }
            
            return _result.getGetMappedVariablesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getServicesInBox
     */
    public RequestRetrieve.ArrayOfServiceInfo getServicesInBox(RequestRetrieve.Box box)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetServicesInBox_OPCODE);
            
            RequestRetrieve.GetServicesInBox _myGetServicesInBox = new RequestRetrieve.GetServicesInBox();
            _myGetServicesInBox.setBox(box);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetServicesInBox_GetServicesInBox_QNAME);
            _bodyBlock.setValue(_myGetServicesInBox);
            _bodyBlock.setSerializer(ns1_myGetServicesInBox_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "http://hiscentral.cuahsi.org/20100205/GetServicesInBox");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            RequestRetrieve.GetServicesInBoxResponse _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (RequestRetrieve.GetServicesInBoxResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (RequestRetrieve.GetServicesInBoxResponse)_responseObj;
            }
            
            return _result.getGetServicesInBoxResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getServicesInBox2
     */
    public RequestRetrieve.ArrayOfServiceInfo getServicesInBox2(double xmin, double ymin, double xmax, double ymax)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetServicesInBox2_OPCODE);
            
            RequestRetrieve.GetServicesInBox2 _myGetServicesInBox2 = new RequestRetrieve.GetServicesInBox2();
            _myGetServicesInBox2.setXmin(xmin);
            _myGetServicesInBox2.setYmin(ymin);
            _myGetServicesInBox2.setXmax(xmax);
            _myGetServicesInBox2.setYmax(ymax);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetServicesInBox2_GetServicesInBox2_QNAME);
            _bodyBlock.setValue(_myGetServicesInBox2);
            _bodyBlock.setSerializer(ns1_myGetServicesInBox2_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "http://hiscentral.cuahsi.org/20100205/GetServicesInBox2");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            RequestRetrieve.GetServicesInBox2Response _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (RequestRetrieve.GetServicesInBox2Response)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (RequestRetrieve.GetServicesInBox2Response)_responseObj;
            }
            
            return _result.getGetServicesInBox2Result();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void _readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case getOntologyTree_OPCODE:
                _deserialize_getOntologyTree(bodyReader, deserializationContext, state);
                break;
            case GetSitesInBox_OPCODE:
                _deserialize_GetSitesInBox(bodyReader, deserializationContext, state);
                break;
            case GetMappedVariables2_OPCODE:
                _deserialize_GetMappedVariables2(bodyReader, deserializationContext, state);
                break;
            case GetWordList_OPCODE:
                _deserialize_GetWordList(bodyReader, deserializationContext, state);
                break;
            case GetSitesInBox2_OPCODE:
                _deserialize_GetSitesInBox2(bodyReader, deserializationContext, state);
                break;
            case GetSeriesCatalogForBox_OPCODE:
                _deserialize_GetSeriesCatalogForBox(bodyReader, deserializationContext, state);
                break;
            case GetWaterOneFlowServiceInfo_OPCODE:
                _deserialize_GetWaterOneFlowServiceInfo(bodyReader, deserializationContext, state);
                break;
            case GetSeriesCatalogForBox2_OPCODE:
                _deserialize_GetSeriesCatalogForBox2(bodyReader, deserializationContext, state);
                break;
            case GetSearchableConcepts_OPCODE:
                _deserialize_GetSearchableConcepts(bodyReader, deserializationContext, state);
                break;
            case GetMappedVariables_OPCODE:
                _deserialize_GetMappedVariables(bodyReader, deserializationContext, state);
                break;
            case GetServicesInBox_OPCODE:
                _deserialize_GetServicesInBox(bodyReader, deserializationContext, state);
                break;
            case GetServicesInBox2_OPCODE:
                _deserialize_GetServicesInBox2(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SenderException("sender.response.unrecognizedOperation", java.lang.Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the getOntologyTree operation.
     */
    private void _deserialize_getOntologyTree(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGetOntologyTreeResponseObj =
            ns1_myGetOntologyTreeResponse_LiteralSerializer.deserialize(ns1_getOntologyTree_getOntologyTreeResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getOntologyTree_getOntologyTreeResponse_QNAME);
        bodyBlock.setValue(myGetOntologyTreeResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the GetSitesInBox operation.
     */
    private void _deserialize_GetSitesInBox(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGetSitesInBoxResponseObj =
            ns1_myGetSitesInBoxResponse_LiteralSerializer.deserialize(ns1_GetSitesInBox_GetSitesInBoxResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetSitesInBox_GetSitesInBoxResponse_QNAME);
        bodyBlock.setValue(myGetSitesInBoxResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the GetMappedVariables2 operation.
     */
    private void _deserialize_GetMappedVariables2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGetMappedVariables2ResponseObj =
            ns1_myGetMappedVariables2Response_LiteralSerializer.deserialize(ns1_GetMappedVariables2_GetMappedVariables2Response_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetMappedVariables2_GetMappedVariables2Response_QNAME);
        bodyBlock.setValue(myGetMappedVariables2ResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the GetWordList operation.
     */
    private void _deserialize_GetWordList(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGetWordListResponseObj =
            ns1_myGetWordListResponse_LiteralSerializer.deserialize(ns1_GetWordList_GetWordListResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetWordList_GetWordListResponse_QNAME);
        bodyBlock.setValue(myGetWordListResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the GetSitesInBox2 operation.
     */
    private void _deserialize_GetSitesInBox2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGetSitesInBox2ResponseObj =
            ns1_myGetSitesInBox2Response_LiteralSerializer.deserialize(ns1_GetSitesInBox2_GetSitesInBox2Response_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetSitesInBox2_GetSitesInBox2Response_QNAME);
        bodyBlock.setValue(myGetSitesInBox2ResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the GetSeriesCatalogForBox operation.
     */
    private void _deserialize_GetSeriesCatalogForBox(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGetSeriesCatalogForBoxResponseObj =
            ns1_myGetSeriesCatalogForBoxResponse_LiteralSerializer.deserialize(ns1_GetSeriesCatalogForBox_GetSeriesCatalogForBoxResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetSeriesCatalogForBox_GetSeriesCatalogForBoxResponse_QNAME);
        bodyBlock.setValue(myGetSeriesCatalogForBoxResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the GetWaterOneFlowServiceInfo operation.
     */
    private void _deserialize_GetWaterOneFlowServiceInfo(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGetWaterOneFlowServiceInfoResponseObj =
            ns1_myGetWaterOneFlowServiceInfoResponse_LiteralSerializer.deserialize(ns1_GetWaterOneFlowServiceInfo_GetWaterOneFlowServiceInfoResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetWaterOneFlowServiceInfo_GetWaterOneFlowServiceInfoResponse_QNAME);
        bodyBlock.setValue(myGetWaterOneFlowServiceInfoResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the GetSeriesCatalogForBox2 operation.
     */
    private void _deserialize_GetSeriesCatalogForBox2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGetSeriesCatalogForBox2ResponseObj =
            ns1_myGetSeriesCatalogForBox2Response_LiteralSerializer.deserialize(ns1_GetSeriesCatalogForBox2_GetSeriesCatalogForBox2Response_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetSeriesCatalogForBox2_GetSeriesCatalogForBox2Response_QNAME);
        bodyBlock.setValue(myGetSeriesCatalogForBox2ResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the GetSearchableConcepts operation.
     */
    private void _deserialize_GetSearchableConcepts(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGetSearchableConceptsResponseObj =
            ns1_myGetSearchableConceptsResponse_LiteralSerializer.deserialize(ns1_GetSearchableConcepts_GetSearchableConceptsResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetSearchableConcepts_GetSearchableConceptsResponse_QNAME);
        bodyBlock.setValue(myGetSearchableConceptsResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the GetMappedVariables operation.
     */
    private void _deserialize_GetMappedVariables(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGetMappedVariablesResponseObj =
            ns1_myGetMappedVariablesResponse_LiteralSerializer.deserialize(ns1_GetMappedVariables_GetMappedVariablesResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetMappedVariables_GetMappedVariablesResponse_QNAME);
        bodyBlock.setValue(myGetMappedVariablesResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the GetServicesInBox operation.
     */
    private void _deserialize_GetServicesInBox(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGetServicesInBoxResponseObj =
            ns1_myGetServicesInBoxResponse_LiteralSerializer.deserialize(ns1_GetServicesInBox_GetServicesInBoxResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetServicesInBox_GetServicesInBoxResponse_QNAME);
        bodyBlock.setValue(myGetServicesInBoxResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the GetServicesInBox2 operation.
     */
    private void _deserialize_GetServicesInBox2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGetServicesInBox2ResponseObj =
            ns1_myGetServicesInBox2Response_LiteralSerializer.deserialize(ns1_GetServicesInBox2_GetServicesInBox2Response_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetServicesInBox2_GetServicesInBox2Response_QNAME);
        bodyBlock.setValue(myGetServicesInBox2ResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    
    
    protected java.lang.String _getDefaultEnvelopeEncodingStyle() {
        return null;
    }
    
    public java.lang.String _getImplicitEnvelopeEncodingStyle() {
        return "";
    }
    
    public java.lang.String _getEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public void _setEncodingStyle(java.lang.String encodingStyle) {
        throw new UnsupportedOperationException("cannot set encoding style");
    }
    
    
    
    
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected java.lang.String[] _getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public javax.xml.namespace.QName[] _getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    public void _initialize(InternalTypeMappingRegistry registry) throws Exception {
        super._initialize(registry);
        ns1_myGetSitesInBox2_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetSitesInBox2.class, ns1_GetSitesInBox2_TYPE_QNAME);
        ns1_myGetSeriesCatalogForBox2_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetSeriesCatalogForBox2.class, ns1_GetSeriesCatalogForBox2_TYPE_QNAME);
        ns1_myGetServicesInBoxResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetServicesInBoxResponse.class, ns1_GetServicesInBoxResponse_TYPE_QNAME);
        ns1_myGetSeriesCatalogForBox2Response_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetSeriesCatalogForBox2Response.class, ns1_GetSeriesCatalogForBox2Response_TYPE_QNAME);
        ns1_myGetWaterOneFlowServiceInfo_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetWaterOneFlowServiceInfo.class, ns1_GetWaterOneFlowServiceInfo_TYPE_QNAME);
        ns1_myGetWaterOneFlowServiceInfoResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetWaterOneFlowServiceInfoResponse.class, ns1_GetWaterOneFlowServiceInfoResponse_TYPE_QNAME);
        ns1_myGetSitesInBox_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetSitesInBox.class, ns1_GetSitesInBox_TYPE_QNAME);
        ns1_myGetServicesInBox_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetServicesInBox.class, ns1_GetServicesInBox_TYPE_QNAME);
        ns1_myGetServicesInBox2Response_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetServicesInBox2Response.class, ns1_GetServicesInBox2Response_TYPE_QNAME);
        ns1_myGetSeriesCatalogForBoxResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetSeriesCatalogForBoxResponse.class, ns1_GetSeriesCatalogForBoxResponse_TYPE_QNAME);
        ns1_myGetMappedVariables2Response_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetMappedVariables2Response.class, ns1_GetMappedVariables2Response_TYPE_QNAME);
        ns1_myGetSearchableConceptsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetSearchableConceptsResponse.class, ns1_GetSearchableConceptsResponse_TYPE_QNAME);
        ns1_myGetSearchableConcepts_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetSearchableConcepts.class, ns1_GetSearchableConcepts_TYPE_QNAME);
        ns1_myGetWordList_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetWordList.class, ns1_GetWordList_TYPE_QNAME);
        ns1_myGetMappedVariablesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetMappedVariablesResponse.class, ns1_GetMappedVariablesResponse_TYPE_QNAME);
        ns1_myGetWordListResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetWordListResponse.class, ns1_GetWordListResponse_TYPE_QNAME);
        ns1_myGetOntologyTree_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetOntologyTree.class, ns1_getOntologyTree_TYPE_QNAME);
        ns1_myGetSitesInBoxResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetSitesInBoxResponse.class, ns1_GetSitesInBoxResponse_TYPE_QNAME);
        ns1_myGetOntologyTreeResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetOntologyTreeResponse.class, ns1_getOntologyTreeResponse_TYPE_QNAME);
        ns1_myGetMappedVariables_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetMappedVariables.class, ns1_GetMappedVariables_TYPE_QNAME);
        ns1_myGetSitesInBox2Response_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetSitesInBox2Response.class, ns1_GetSitesInBox2Response_TYPE_QNAME);
        ns1_myGetSeriesCatalogForBox_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetSeriesCatalogForBox.class, ns1_GetSeriesCatalogForBox_TYPE_QNAME);
        ns1_myGetMappedVariables2_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetMappedVariables2.class, ns1_GetMappedVariables2_TYPE_QNAME);
        ns1_myGetServicesInBox2_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", RequestRetrieve.GetServicesInBox2.class, ns1_GetServicesInBox2_TYPE_QNAME);
    }
    
    private static final javax.xml.namespace.QName _portName = new QName("http://hiscentral.cuahsi.org/20100205/", "hiscentralSoap");
    private static final int getOntologyTree_OPCODE = 0;
    private static final int GetSitesInBox_OPCODE = 1;
    private static final int GetMappedVariables2_OPCODE = 2;
    private static final int GetWordList_OPCODE = 3;
    private static final int GetSitesInBox2_OPCODE = 4;
    private static final int GetSeriesCatalogForBox_OPCODE = 5;
    private static final int GetWaterOneFlowServiceInfo_OPCODE = 6;
    private static final int GetSeriesCatalogForBox2_OPCODE = 7;
    private static final int GetSearchableConcepts_OPCODE = 8;
    private static final int GetMappedVariables_OPCODE = 9;
    private static final int GetServicesInBox_OPCODE = 10;
    private static final int GetServicesInBox2_OPCODE = 11;
    private static final javax.xml.namespace.QName ns1_getOntologyTree_getOntologyTree_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "getOntologyTree");
    private static final javax.xml.namespace.QName ns1_getOntologyTree_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "getOntologyTree");
    private CombinedSerializer ns1_myGetOntologyTree_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_getOntologyTree_getOntologyTreeResponse_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "getOntologyTreeResponse");
    private static final javax.xml.namespace.QName ns1_getOntologyTreeResponse_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "getOntologyTreeResponse");
    private CombinedSerializer ns1_myGetOntologyTreeResponse_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetSitesInBox_GetSitesInBox_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSitesInBox");
    private static final javax.xml.namespace.QName ns1_GetSitesInBox_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSitesInBox");
    private CombinedSerializer ns1_myGetSitesInBox_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetSitesInBox_GetSitesInBoxResponse_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSitesInBoxResponse");
    private static final javax.xml.namespace.QName ns1_GetSitesInBoxResponse_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSitesInBoxResponse");
    private CombinedSerializer ns1_myGetSitesInBoxResponse_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetMappedVariables2_GetMappedVariables2_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetMappedVariables2");
    private static final javax.xml.namespace.QName ns1_GetMappedVariables2_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetMappedVariables2");
    private CombinedSerializer ns1_myGetMappedVariables2_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetMappedVariables2_GetMappedVariables2Response_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetMappedVariables2Response");
    private static final javax.xml.namespace.QName ns1_GetMappedVariables2Response_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetMappedVariables2Response");
    private CombinedSerializer ns1_myGetMappedVariables2Response_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetWordList_GetWordList_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetWordList");
    private static final javax.xml.namespace.QName ns1_GetWordList_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetWordList");
    private CombinedSerializer ns1_myGetWordList_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetWordList_GetWordListResponse_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetWordListResponse");
    private static final javax.xml.namespace.QName ns1_GetWordListResponse_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetWordListResponse");
    private CombinedSerializer ns1_myGetWordListResponse_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetSitesInBox2_GetSitesInBox2_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSitesInBox2");
    private static final javax.xml.namespace.QName ns1_GetSitesInBox2_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSitesInBox2");
    private CombinedSerializer ns1_myGetSitesInBox2_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetSitesInBox2_GetSitesInBox2Response_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSitesInBox2Response");
    private static final javax.xml.namespace.QName ns1_GetSitesInBox2Response_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSitesInBox2Response");
    private CombinedSerializer ns1_myGetSitesInBox2Response_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetSeriesCatalogForBox_GetSeriesCatalogForBox_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSeriesCatalogForBox");
    private static final javax.xml.namespace.QName ns1_GetSeriesCatalogForBox_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSeriesCatalogForBox");
    private CombinedSerializer ns1_myGetSeriesCatalogForBox_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetSeriesCatalogForBox_GetSeriesCatalogForBoxResponse_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSeriesCatalogForBoxResponse");
    private static final javax.xml.namespace.QName ns1_GetSeriesCatalogForBoxResponse_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSeriesCatalogForBoxResponse");
    private CombinedSerializer ns1_myGetSeriesCatalogForBoxResponse_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetWaterOneFlowServiceInfo_GetWaterOneFlowServiceInfo_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetWaterOneFlowServiceInfo");
    private static final javax.xml.namespace.QName ns1_GetWaterOneFlowServiceInfo_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetWaterOneFlowServiceInfo");
    private CombinedSerializer ns1_myGetWaterOneFlowServiceInfo_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetWaterOneFlowServiceInfo_GetWaterOneFlowServiceInfoResponse_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetWaterOneFlowServiceInfoResponse");
    private static final javax.xml.namespace.QName ns1_GetWaterOneFlowServiceInfoResponse_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetWaterOneFlowServiceInfoResponse");
    private CombinedSerializer ns1_myGetWaterOneFlowServiceInfoResponse_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetSeriesCatalogForBox2_GetSeriesCatalogForBox2_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSeriesCatalogForBox2");
    private static final javax.xml.namespace.QName ns1_GetSeriesCatalogForBox2_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSeriesCatalogForBox2");
    private CombinedSerializer ns1_myGetSeriesCatalogForBox2_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetSeriesCatalogForBox2_GetSeriesCatalogForBox2Response_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSeriesCatalogForBox2Response");
    private static final javax.xml.namespace.QName ns1_GetSeriesCatalogForBox2Response_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSeriesCatalogForBox2Response");
    private CombinedSerializer ns1_myGetSeriesCatalogForBox2Response_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetSearchableConcepts_GetSearchableConcepts_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSearchableConcepts");
    private static final javax.xml.namespace.QName ns1_GetSearchableConcepts_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSearchableConcepts");
    private CombinedSerializer ns1_myGetSearchableConcepts_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetSearchableConcepts_GetSearchableConceptsResponse_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSearchableConceptsResponse");
    private static final javax.xml.namespace.QName ns1_GetSearchableConceptsResponse_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetSearchableConceptsResponse");
    private CombinedSerializer ns1_myGetSearchableConceptsResponse_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetMappedVariables_GetMappedVariables_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetMappedVariables");
    private static final javax.xml.namespace.QName ns1_GetMappedVariables_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetMappedVariables");
    private CombinedSerializer ns1_myGetMappedVariables_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetMappedVariables_GetMappedVariablesResponse_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetMappedVariablesResponse");
    private static final javax.xml.namespace.QName ns1_GetMappedVariablesResponse_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetMappedVariablesResponse");
    private CombinedSerializer ns1_myGetMappedVariablesResponse_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetServicesInBox_GetServicesInBox_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetServicesInBox");
    private static final javax.xml.namespace.QName ns1_GetServicesInBox_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetServicesInBox");
    private CombinedSerializer ns1_myGetServicesInBox_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetServicesInBox_GetServicesInBoxResponse_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetServicesInBoxResponse");
    private static final javax.xml.namespace.QName ns1_GetServicesInBoxResponse_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetServicesInBoxResponse");
    private CombinedSerializer ns1_myGetServicesInBoxResponse_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetServicesInBox2_GetServicesInBox2_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetServicesInBox2");
    private static final javax.xml.namespace.QName ns1_GetServicesInBox2_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetServicesInBox2");
    private CombinedSerializer ns1_myGetServicesInBox2_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_GetServicesInBox2_GetServicesInBox2Response_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetServicesInBox2Response");
    private static final javax.xml.namespace.QName ns1_GetServicesInBox2Response_TYPE_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "GetServicesInBox2Response");
    private CombinedSerializer ns1_myGetServicesInBox2Response_LiteralSerializer;
    private static final java.lang.String[] myNamespace_declarations =
                                        new java.lang.String[] {
                                            "ns0", "http://hiscentral.cuahsi.org/20100205/"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
}
