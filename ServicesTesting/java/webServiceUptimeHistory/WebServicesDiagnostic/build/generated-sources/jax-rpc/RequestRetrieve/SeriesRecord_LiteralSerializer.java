// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package RequestRetrieve;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.xsd.XSDConstants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.util.List;
import java.util.ArrayList;

public class SeriesRecord_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable  {
    private static final javax.xml.namespace.QName ns1_ServCode_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "ServCode");
    private static final javax.xml.namespace.QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns2_myns2_string__java_lang_String_String_Serializer;
    private static final javax.xml.namespace.QName ns1_ServURL_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "ServURL");
    private static final javax.xml.namespace.QName ns1_location_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "location");
    private static final javax.xml.namespace.QName ns1_VarCode_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "VarCode");
    private static final javax.xml.namespace.QName ns1_VarName_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "VarName");
    private static final javax.xml.namespace.QName ns1_beginDate_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "beginDate");
    private static final javax.xml.namespace.QName ns1_endDate_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "endDate");
    private static final javax.xml.namespace.QName ns1_authtoken_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "authtoken");
    private static final javax.xml.namespace.QName ns1_ValueCount_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "ValueCount");
    private static final javax.xml.namespace.QName ns2_int_TYPE_QNAME = SchemaConstants.QNAME_TYPE_INT;
    private CombinedSerializer ns2_myns2__int__int_Int_Serializer;
    private static final javax.xml.namespace.QName ns1_Sitename_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "Sitename");
    private static final javax.xml.namespace.QName ns1_latitude_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "latitude");
    private static final javax.xml.namespace.QName ns2_double_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DOUBLE;
    private CombinedSerializer ns2_myns2__double__double_Double_Serializer;
    private static final javax.xml.namespace.QName ns1_longitude_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "longitude");
    private static final javax.xml.namespace.QName ns1_datatype_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "datatype");
    private static final javax.xml.namespace.QName ns1_valuetype_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "valuetype");
    private static final javax.xml.namespace.QName ns1_samplemedium_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "samplemedium");
    private static final javax.xml.namespace.QName ns1_timeunits_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "timeunits");
    private static final javax.xml.namespace.QName ns1_conceptKeyword_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "conceptKeyword");
    private static final javax.xml.namespace.QName ns1_genCategory_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "genCategory");
    private static final javax.xml.namespace.QName ns1_TimeSupport_QNAME = new QName("http://hiscentral.cuahsi.org/20100205/", "TimeSupport");
    
    public SeriesRecord_LiteralSerializer(javax.xml.namespace.QName type, java.lang.String encodingStyle) {
        this(type, encodingStyle, false);
    }
    
    public SeriesRecord_LiteralSerializer(javax.xml.namespace.QName type, java.lang.String encodingStyle, boolean encodeType) {
        super(type, true, encodingStyle, encodeType);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns2_myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.String.class, ns2_string_TYPE_QNAME);
        ns2_myns2__int__int_Int_Serializer = (CombinedSerializer)registry.getSerializer("", int.class, ns2_int_TYPE_QNAME);
        ns2_myns2__double__double_Double_Serializer = (CombinedSerializer)registry.getSerializer("", double.class, ns2_double_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws java.lang.Exception {
        RequestRetrieve.SeriesRecord instance = new RequestRetrieve.SeriesRecord();
        java.lang.Object member=null;
        javax.xml.namespace.QName elementName;
        java.util.List values;
        java.lang.Object value;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ServCode_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ServCode_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setServCode((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ServURL_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ServURL_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setServURL((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_location_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_location_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setLocation((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_VarCode_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_VarCode_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setVarCode((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_VarName_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_VarName_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setVarName((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_beginDate_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_beginDate_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setBeginDate((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_endDate_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_endDate_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setEndDate((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_authtoken_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_authtoken_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setAuthtoken((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ValueCount_QNAME)) {
                member = ns2_myns2__int__int_Int_Serializer.deserialize(ns1_ValueCount_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setValueCount(((java.lang.Integer)member).intValue());
                reader.nextElementContent();
            } else {
                throw new DeserializationException("literal.unexpectedElementName", new Object[] { ns1_ValueCount_QNAME, reader.getName() });
            }
        }
        else {
            throw new DeserializationException("literal.expectedElementName", reader.getName().toString());
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_Sitename_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Sitename_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setSitename((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_latitude_QNAME)) {
                member = ns2_myns2__double__double_Double_Serializer.deserialize(ns1_latitude_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setLatitude(((Double)member).doubleValue());
                reader.nextElementContent();
            } else {
                throw new DeserializationException("literal.unexpectedElementName", new Object[] { ns1_latitude_QNAME, reader.getName() });
            }
        }
        else {
            throw new DeserializationException("literal.expectedElementName", reader.getName().toString());
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_longitude_QNAME)) {
                member = ns2_myns2__double__double_Double_Serializer.deserialize(ns1_longitude_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setLongitude(((Double)member).doubleValue());
                reader.nextElementContent();
            } else {
                throw new DeserializationException("literal.unexpectedElementName", new Object[] { ns1_longitude_QNAME, reader.getName() });
            }
        }
        else {
            throw new DeserializationException("literal.expectedElementName", reader.getName().toString());
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_datatype_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_datatype_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setDatatype((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_valuetype_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_valuetype_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setValuetype((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_samplemedium_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_samplemedium_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setSamplemedium((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_timeunits_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_timeunits_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setTimeunits((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_conceptKeyword_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_conceptKeyword_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setConceptKeyword((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_genCategory_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_genCategory_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setGenCategory((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_TimeSupport_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_TimeSupport_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setTimeSupport((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (java.lang.Object)instance;
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        RequestRetrieve.SeriesRecord instance = (RequestRetrieve.SeriesRecord)obj;
        
    }
    public void doSerialize(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        RequestRetrieve.SeriesRecord instance = (RequestRetrieve.SeriesRecord)obj;
        
        if (instance.getServCode() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getServCode(), ns1_ServCode_QNAME, null, writer, context);
        }
        if (instance.getServURL() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getServURL(), ns1_ServURL_QNAME, null, writer, context);
        }
        if (instance.getLocation() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getLocation(), ns1_location_QNAME, null, writer, context);
        }
        if (instance.getVarCode() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getVarCode(), ns1_VarCode_QNAME, null, writer, context);
        }
        if (instance.getVarName() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getVarName(), ns1_VarName_QNAME, null, writer, context);
        }
        if (instance.getBeginDate() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getBeginDate(), ns1_beginDate_QNAME, null, writer, context);
        }
        if (instance.getEndDate() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getEndDate(), ns1_endDate_QNAME, null, writer, context);
        }
        if (instance.getAuthtoken() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getAuthtoken(), ns1_authtoken_QNAME, null, writer, context);
        }
        if (new java.lang.Integer(instance.getValueCount()) == null) {
            throw new SerializationException("literal.unexpectedNull");
        }
        ns2_myns2__int__int_Int_Serializer.serialize(new java.lang.Integer(instance.getValueCount()), ns1_ValueCount_QNAME, null, writer, context);
        if (instance.getSitename() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getSitename(), ns1_Sitename_QNAME, null, writer, context);
        }
        if (new Double(instance.getLatitude()) == null) {
            throw new SerializationException("literal.unexpectedNull");
        }
        ns2_myns2__double__double_Double_Serializer.serialize(new Double(instance.getLatitude()), ns1_latitude_QNAME, null, writer, context);
        if (new Double(instance.getLongitude()) == null) {
            throw new SerializationException("literal.unexpectedNull");
        }
        ns2_myns2__double__double_Double_Serializer.serialize(new Double(instance.getLongitude()), ns1_longitude_QNAME, null, writer, context);
        if (instance.getDatatype() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getDatatype(), ns1_datatype_QNAME, null, writer, context);
        }
        if (instance.getValuetype() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getValuetype(), ns1_valuetype_QNAME, null, writer, context);
        }
        if (instance.getSamplemedium() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getSamplemedium(), ns1_samplemedium_QNAME, null, writer, context);
        }
        if (instance.getTimeunits() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getTimeunits(), ns1_timeunits_QNAME, null, writer, context);
        }
        if (instance.getConceptKeyword() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getConceptKeyword(), ns1_conceptKeyword_QNAME, null, writer, context);
        }
        if (instance.getGenCategory() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getGenCategory(), ns1_genCategory_QNAME, null, writer, context);
        }
        if (instance.getTimeSupport() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getTimeSupport(), ns1_TimeSupport_QNAME, null, writer, context);
        }
    }
}
