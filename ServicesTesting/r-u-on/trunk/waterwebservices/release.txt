R-U-ON iao.net Package Release Notes


iao.net is the .net API to IAOP (I-Am-On-Protocol).
You can use it to develop R-U-ON agents using the .net framework.
See the .chm file and the sample agent (CoffeeOn) to learn how to develop
your own agents.

When you want to deploy your agent as a Service, take a look at ServiceLoader
and ServiceAgentSample.

Another usefull object to use is the SimpleAgent - an object allowing simple
integration with the R-U-ON platform.

Good luck...
The R-U-ON Team
www.r-u-on.com



Package Content
---------------
iao.net          Directory with the sources for the iao.net dll as
                 well as the distribution file (bin\release).
iao.net.chm      API documentation (Agent class).
                 the class you want to look at).
CoffeeOn         Directory containing the aromatic sample agent.
ServiceLoader    This executable is the service wrapper for your developed
                 agent. Look at ServiceAgentSample to see how to make your
                 agent compliant with the ServiceLoader.
                 Of course you would want to change the name of the .exe file
                 to match the name of your project.
                 After that installation is simple. Just put all the resources
                 in one directory (iao.net.dll, your agent dll and ServiceLoader                 
                 or whatever you chose to rename it to) and execute. The agent
                 will install and start running.
ServiceAgentSample - A sample project showing how to write an agent that can
                 run as a service.
iaosharp.sln     The solution file that points to the iao.net project
                 and the CofeeOn project
simplesample.htm A simple html file showing how to use the SimpleAgent object.
release.txt      This file
ProxySettings.reg This file contains registry entries for proxy user name and
                 password. You can change the file before importing with the
	  	 actual user name and password. Use this file if you are unable
		 to run the agent service under a user that has access to the
		 proxy server.

ver 1.2.0.4 1/6/08:
Through registry settings it is possible to control all aspects of proxy settings including URL, username, password, domain and authentication type. You can use this ability to override some or all of the system configured proxy.
See the ProxySettings.reg file for the specifics.

ver 1.2.0.3 1/4/08:
Proxy user name and password can now be entered at HKEY_LOCAL_MACHINE\SOFTWARE\R-U-ON\Agents\ to make the settings common to all iao.net agents.
Added a registry file to import proxy settings into the right place. The file
may be changed prior to importing or you can use regedit to change the username
and password after import.

ver 1.2.0.2 12/31/08
Improved proxy support:
Agent will use the proxy settings defined for the account it is running on. This might require changing the account the agent service is running under (under Services, administrative tools).
The agent proxy cridentials can also be set manually from registry. The agent registry entry is under HKEY_LOCAL_MACHINE\SOFTWARE\R-U-ON\Agents\[AGENT NAME].
There you can manually add string entries for ProxyUser and ProxyPassword.
You can use this in conjunctions with the proxycfg.exe system tool that can set the default proxy server for all accounts.

ver 1.2 12/12/07
- Agent.SetParameters can now be used to set agent configuration parameters and managed resources. This is useful if you have a local UI that you wish to affect the agent parameters as they appear in the on-site agent page.
- Added Account class that lets you resolve the account id using email/password or create a new account on the fly. This is useful if you want the agent to be usable with different R-U-ON accounts.
- The IAOP connection now uses https by default. If you are upgrading to this version, be aware that the connection is switching from port 80 to port 443.

ver 1.1.4 9/16/07
- When using alarm snapshot, two consecutive identical calls will be supressed. Now it is okay to keep repeating the same snapshot, as it won't cause more traffic than necessary.
- Agent.Monitor is now synchronized
- Addes support for Agent.SetParameters, allowing to set Alias, Group, Notification severity and Keep-Alive-Alarm-Supression from the agent.

ver 1.1.3 9/2/06
- Added ServiceLoader that takes care of all Agent deployment issues.
- Added ServiceAgentSample showing how to write an agent that can be loaded
  by ServiceLoader.
- Added an interface to change Monitor sample rate after Agent contstruction.
- SharedAgent completed.

ver 1.1.2 8/26/06
- Added support for Agent Configuration

ver 1.1.1 8/21/06
- Added support for proxy server cridentials

ver 1.1 8/17/06:
- Made Account ID persistent at the Agent level
- Introduced the SimpleAgent class and made in ActiveX compliant.

ver 1.0 8/7/06:
- First release
- Does not contain implementation of SharedAgent and Configuration API.

